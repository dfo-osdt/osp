# reusable workflow for build app
name: build

on: workflow_dispatch
  
jobs:
  build:
    runs-on: ubuntu-20.04
  
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: pnpm
      uses: pnpm/action-setup@v2.2.2
      with:
        version: 7
    - name: Use Node.js 18.x
      uses: actions/setup-node@v2
      with:
        node-version: "18.x"
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install

    - name: Build
      run: pnpm run build

    - name: Create deployment artifact
      run: tar -czf osp_${{github.sha}}.tar.gz --exclude=".git" --exclude="node_modules" *

    - name: Store artifact for distribution
      uses: actions/upload-artifact@v3
      with:
        name: app-build
        path: osp_${{github.sha}}.tar.gz

  prepare-release-on-server:
    runs-on: ubuntu-20.04
    needs: build
    steps:
    - name: Get artifact from previous step
      uses: actions/download-artifact@v3
      with:
        name: app-build
        path: osp_${{github.sha}}.tar.gz
    - name: Upload to staging server
      uses: appleboy/scp-action@master
      with:
        source: osp_${{github.sha}}.tar.gz
        target: /var/www/${{secrets.STAGING_SERVER}}/html/artifacts
        host: ${{secrets.STAGING_SERVER}}
        port: 22
        username: ${{ secrets.STAGING_USER }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
    - name: Extract archive and create directories
      uses: appleboy/ssh-action@master
      with:
        host: ${{secrets.STAGING_SERVER}}
        port: 22
        username: ${{ secrets.STAGING_USER }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        script: |
          mkdir -p /var/www/${{secrets.STAGING_SERVER}}/html/releases/${{github.sha}}
          tar -xzf /var/www/${{secrets.STAGING_SERVER}}/html/artifacts/osp_${{github.sha}}.tar.gz/osp_${{github.sha}}.tar.gz -C /var/www/${{secrets.STAGING_SERVER}}/html/releases/${{github.sha}}
          
          rm -rf /var/www/${{secrets.STAGING_SERVER}}/html/releases/${{github.sha}}/storage
          mkdir -p /var/www/${{secrets.STAGING_SERVER}}/html/storage/{app,public,framework,logs}
          mkdir -p /var/www/${{secrets.STAGING_SERVER}}/html/storage/framework/{cache,sessions,testing,views}
          chmod -R 0775 /var/www/${{secrets.STAGING_SERVER}}/html/storage

  run-before-hooks:
    runs-on: ubuntu-20.04
    needs: prepare-release-on-server
    steps:
      - name: Run before hooks
        uses: appleboy/ssh-action@master
        env:
          RELEASE_PATH: /var/www/${{secrets.STAGING_SERVER}}/html/releases/${{github.sha}}
          ACTIVE_RELEASE_PATH: /var/www/${{secrets.STAGING_SERVER}}/html/current
          STORAGE_PATH: /var/www/${{secrets.STAGING_SERVER}}/html/storage
          BASE_PATH: /var/www/${{secrets.STAGING_SERVER}}/html
        with:
          host: ${{secrets.STAGING_SERVER}}
          port: 22
          username: ${{ secrets.STAGING_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          envs: RELEASE_PATH,ACTIVE_RELEASE_PATH,STORAGE_PATH,BASE_PATH
          script: |
            cd /var/www/${{secrets.STAGING_SERVER}}/html/releases/${{github.sha}}
            ln -s -n -f $RELEASE_PATH $ACTIVE_RELEASE_PATH

    
